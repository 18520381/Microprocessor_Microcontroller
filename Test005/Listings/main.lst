C51 COMPILER V9.60.0.0   MAIN                                                              04/20/2020 08:15:19 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include<reg51.h>
   2          #define msec 1
   3          unsigned int sec1,sec2;
   4          int sec1_1,sec1_2,sec2_1,sec2_2;
   5          
   6          unsigned int digi_val[10]={0x40,0xF9,0x24,0x30,0x19,0x12,0x02,0xF8,0x00,0x10};
   7          sbit dig_ctrl_1=P1^0;  // Declare the control pins of seven segments
   8          sbit dig_ctrl_2=P1^1;
   9          sbit dig_ctrl_3=P1^2;
  10          sbit dig_ctrl_4=P1^3;
  11          sbit start_pin = P1^4;  // Start pin to start the watch.
  12          sbit stop_pin = P1^5;  // Stop pin to stop the watch.
  13          sbit reset_pin = P1^6;  // Reset pin to reset the watch.
  14          int s,t;
  15          
  16          void mplex_delay(unsigned int time)  // Function to provide a time delay of approximatelty one second usin
             -g Timer 1
  17          {
  18   1      int i,j;
  19   1      for (i=0;i<=time;i++)
  20   1        for(j=0;j<=50;j++);
  21   1      }
  22          
  23          void digi_out(unsigned int current_num)
  24          {
  25   1          P2=digi_val[current_num];
  26   1           mplex_delay(msec);
  27   1      }
  28          
  29          void display(unsigned int dig1,unsigned int dig2)  // Function to display the digits on seven segmnet. For
             - more details refer seven segment multiplexing.
  30          {
  31   1          sec1_2=dig1%10;
  32   1      sec1_1=dig1/10;
  33   1      sec2_2=dig2%10;
  34   1      sec2_1=dig2/10;
  35   1      TMOD=0x01;  //Enable Timer 0
  36   1      TL0=0xFF;
  37   1      TH0=0xDB;
  38   1      TR0=1;  // Triger Timer 0
  39   1      while(TF0==0)
  40   1      {
  41   2        dig_ctrl_1 = 1;
  42   2        dig_ctrl_2 = dig_ctrl_3 = dig_ctrl_4 = 0;
  43   2        digi_out(sec1_1);
  44   2        dig_ctrl_2 = 1;
  45   2        dig_ctrl_1 = dig_ctrl_3 = dig_ctrl_4 = 0;
  46   2        digi_out(sec1_2);
  47   2        dig_ctrl_3 = 1;
  48   2        dig_ctrl_2 = dig_ctrl_1 = dig_ctrl_4 = 0;
  49   2        digi_out(sec2_1);
  50   2        dig_ctrl_4 = 1;
  51   2        dig_ctrl_2 = dig_ctrl_3 = dig_ctrl_1 = 0;
  52   2        digi_out(sec2_2);
C51 COMPILER V9.60.0.0   MAIN                                                              04/20/2020 08:15:19 PAGE 2   

  53   2      }
  54   1      
  55   1      TR0=0;
  56   1      TF0=0;
  57   1      }
  58          
  59          void main()
  60          {
  61   1      while(1)
  62   1      {
  63   2      start:  // Segment to start the stop watch
  64   2        start_pin = 1;
  65   2        stop_pin = 1;
  66   2        reset_pin = 1; 
  67   2        dig_ctrl_1 = 0;
  68   2        dig_ctrl_2 = 0;
  69   2        dig_ctrl_3 = 0;
  70   2        dig_ctrl_4 = 0;
  71   2        P2 = 0xFF;
  72   2        s = t = 0;
  73   2        while(start_pin == 1)// Check if start pin is pressed
  74   2        {
  75   3        display(0,0);
  76   3        }
  77   2      
  78   2      stopwatch:  // Segment to stop the watch
  79   2        for (sec1=s;sec1<=99;sec1++)
  80   2        {
  81   3         if (stop_pin == 0 )  //Check if stop pin is pressed
  82   3         break;
  83   3          for (sec2=t;sec2<=99; sec2++)
  84   3          {
  85   4          if (stop_pin == 0 )  //Check if stop pin is pressed
  86   4          break;
  87   4          t=0;
  88   4          display(sec1,sec2);
  89   4          }
  90   3        }
  91   2        stop_pin = 1;
  92   2        s = sec1;
  93   2        t = sec2;
  94   2       
  95   2        while ( start_pin != 0 && reset_pin != 0 )  //Check if start pin or reset pins are not pressed
  96   2        {
  97   3        display(sec1,sec2);
  98   3        }
  99   2       
 100   2        if (start_pin == 0)  //Check if start pin is pressed
 101   2        {
 102   3        goto stopwatch;
 103   3        }
 104   2        else
 105   2        {
 106   3         if (reset_pin == 0 )  //Check if reset pin is pressed
 107   3         {
 108   4         s = t = 0;
 109   4         goto start;
 110   4         }
 111   3        }
 112   2      }
 113   1      
 114   1      
C51 COMPILER V9.60.0.0   MAIN                                                              04/20/2020 08:15:19 PAGE 3   

 115   1      
 116   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    355    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     36    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
